{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","logo","alt","Footer","CurrentUserContext","React","createContext","Card","card","onCardClick","onDeleteClick","onCardLike","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","style","backgroundImage","link","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","onCardDelete","avatar","aria-label","about","map","item","key","PopupWithForm","isOpen","title","children","onClose","onSubmit","classSelector","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","placeholder","id","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","onUpdateAvatar","inputRef","useRef","current","ref","AddPlacePopup","setLink","ImagePopup","api","config","_url","url","_headers","headers","res","ok","json","Promise","reject","Error","status","fetch","this","method","then","_handleResponseData","data","body","JSON","stringify","like","Component","authorization","App","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","selectedCard","setSelectedCard","setCards","getInitialCards","dataCards","catch","err","console","log","getUserData","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","setUserData","addCard","setUserAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8fe537d5.chunk.js","sourcesContent":["import logo from \"../images/logo.svg\";\nimport React from \"react\";\nfunction Header() {\n  return (\n    <header className=\"header\">\n        <img className=\"header__logo\" src={logo} alt=\"Логотип\" />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020. Mesto Russia</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React, { useContext } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onDeleteClick, onCardLike }) {\n  const currentUser = useContext(CurrentUserContext);\n  const isOwn = card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = `photo__delete-button ${\n    isOwn\n      ? \"photo__delete-button_state_visible\"\n      : \"photo__delete-button_state_hidden\"\n  }`;\n  const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n  // Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = `photo__like-button ${\n    isLiked ? \"photo__like-button_active\" : \"\"\n  }`;\n  return (\n    <li className=\"photo__item\">\n      <button\n        className={cardDeleteButtonClassName}\n        type=\"button\"\n        onClick={() => onDeleteClick(card)}\n      />\n      <div\n        className=\"photo__image\"\n        style={{ backgroundImage: `url(${card.link})` }}\n        onClick={() => {\n          onCardClick(card);\n        }}\n      />\n      <div className=\"photo__caption\">\n        <h2 className=\"photo__text\"> {card.name}</h2>\n        <div>\n          <button\n            className={cardLikeButtonClassName}\n            type=\"button\"\n            onClick={() => {\n              onCardLike(card);\n            }}\n          />\n          <p className=\"photo__like-counter\"> {card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React, { useContext } from \"react\";\nimport Card from \"./Card.js\";\n\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction Main({\n  onEditProfile,\n  onAddPlace,\n  onEditAvatar,\n  onCardClick,\n  cards,\n  onCardDelete,\n  onCardLike,\n}) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\">\n          <div\n            className=\"profile__avatar-image\"\n            style={{ backgroundImage: `url(${currentUser.avatar})` }}\n          />\n          <button\n            className=\"profile__avatar-edit-button\"\n            type=\"button\"\n            aria-label=\"Изменить\"\n            onClick={() => {\n              onEditAvatar(true);\n            }}\n          />\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__name\">\n            <h1 className=\"profile__name-text\"> {currentUser.name} </h1>\n            <button\n              className=\"profile__edit-button\"\n              type=\"button\"\n              aria-label=\"Изменить\"\n              onClick={() => {\n                onEditProfile(true);\n              }}\n            />\n          </div>\n          <p className=\"profile__profession\"> {currentUser.about} </p>\n        </div>\n        <button\n          className=\"profile__add-button\"\n          type=\"button\"\n          aria-label=\"Добавить\"\n          onClick={() => {\n            onAddPlace(true);\n          }}\n        />\n      </section>\n      <section className=\"photo\">\n        <ul className=\"photo__cards\">\n          {cards.map((item) => {\n            return (\n              <Card\n                key={item._id}\n                card={item}\n                onCardClick={onCardClick}\n                onDeleteClick={onCardDelete}\n                onCardLike={onCardLike}\n              />\n            );\n          })}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction PopupWithForm({ isOpen, title, name, children, onClose, onSubmit }) {\n  const classSelector = `modal modal_assign_${name} ${\n    isOpen ? \"modal_opened\" : \"\"\n  }`;\n  return (\n    <section className={classSelector}>\n      <form className=\"modal__form\" name={name} noValidate onSubmit={onSubmit}>\n        <h3 className=\"modal__title\">{title}</h3>\n        {children}\n        <button type=\"submit\" className=\"modal__submit-button\">\n          Сохранить\n        </button>\n        <button\n          className=\"modal__esc-button\"\n          type=\"button\"\n          aria-label=\"Закрыть\"\n          onClick={onClose}\n        />\n      </form>\n    </section>\n  );\n}\n\nexport default PopupWithForm;\n","import React, { useState } from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const currentUser = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n  return (\n    <PopupWithForm\n      name=\"form-edit\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"modal__field modal__field_assign_name\"\n        placeholder=\"Введите имя\"\n        name=\"name\"\n        id=\"field-name\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <p className=\"modal__field-error\" id=\"field-name-error\" />\n      <input\n        type=\"text\"\n        className=\"modal__field modal__field_assign_profession\"\n        placeholder=\"Введите профессию\"\n        name=\"about\"\n        id=\"field-profession\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        value={description}\n        onChange={(e) => setDescription(e.target.value)}\n      />\n      <p className=\"modal__field-error\" id=\"field-profession-error\" />\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import React, { useRef } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const inputRef = useRef();\n  function handleSubmit(e) {\n    e.preventDefault();\n    onUpdateAvatar({\n      avatar: inputRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"form-avatar\"\n      title=\"Обновить аватар\"\n      onClose={onClose}\n      isOpen={isOpen}\n      onSubmit={handleSubmit}\n    >\n      <input\n        ref={inputRef}\n        type=\"url\"\n        className=\"modal__field modal__field_assign_link\"\n        placeholder=\"Ссылка на картинку\"\n        name=\"avatar\"\n        id=\"field-link\"\n        required\n      />\n      <p className=\"modal__field-error\" id=\"field-link-error\" />\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React, { useState } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n  const [name, setName] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onAddPlace({\n      name,\n      link,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"form-add \"\n      title=\"Новое место\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        className=\"modal__field modal__field_assign_title\"\n        placeholder=\"Название\"\n        name=\"name\"\n        id=\"field-title\"\n        required\n        minLength=\"1\"\n        maxLength=\"30\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <p className=\"modal__field-error\" id=\"field-title-error\" />\n      <input\n        type=\"url\"\n        className=\"modal__field modal__field_assign_link\"\n        placeholder=\"Ссылка на картинку\"\n        name=\"link\"\n        id=\"field-link\"\n        required\n        value={link}\n        onChange={(e) => setLink(e.target.value)}\n      />\n      <p className=\"modal__field-error\" id=\"field-link-error\" />\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\n\nfunction ImagePopup({ isOpen, card, onClose }) {\n  return (\n    <section\n      className={`modal modal_assign_album ${isOpen ? \"modal_opened\" : \"\"}`}\n    >\n      <div className=\"modal__large-photo\">\n        <img className=\"modal__image\" src={card.link} alt={card.name} />\n        <button\n          className=\"modal__esc-button\"\n          type=\"button\"\n          aria-label=\"Закрыть\"\n          onClick={onClose}\n        />\n        <p className=\"modal__caption\"> {card.name} </p>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;\n","import React from \"react\";\n\nclass Api extends React.Component {\n  constructor(config) {\n    super(config);\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  _handleResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers,\n      method: \"GET\",\n    }).then(this._handleResponseData);\n  }\n\n  setUserData(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._handleResponseData);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._handleResponseData);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers,\n      method: \"GET\",\n    }).then(this._handleResponseData);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(data),\n    }).then(this._handleResponseData);\n  }\n\n  removeCard(id) {\n    return fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponseData);\n  }\n\n  changeLikeCardStatus(id, like) {\n    return fetch(`${this._url}/cards/likes/${id}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleResponseData);\n  }\n}\n\nconst api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-15\",\n  headers: {\n    authorization: \"87805956-615a-41b3-9626-fd0494106fb1\",\n    \"Content-type\": \"application/json\",\n  },\n});\n\nexport default api;\n","import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header.js\";\nimport Footer from \"./Footer.js\";\nimport Main from \"./Main.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api\n      .getInitialCards()\n      .then((dataCards) => {\n        setCards(dataCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function handleCardDelete(card) {\n    api\n      .removeCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function handleAddPlaceSubmit(card) {\n    api\n      .addCard(card)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        onClose();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    api\n      .getUserData()\n      .then((data) => {\n        setCurrentUser(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleUpdateUser = (data) => {\n    api\n      .setUserData(data)\n      .then((data) => {\n        setCurrentUser(data);\n        onClose();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const handleUpdateAvatar = (data) => {\n    api\n      .setUserAvatar(data)\n      .then((data) => {\n        setCurrentUser(data);\n        onClose();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const onClose = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsDeletePopupOpen(false);\n    setSelectedCard({});\n  };\n\n  const handleCardClick = (card) => {\n    setIsImagePopupOpen(true);\n    setSelectedCard(card);\n  };\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={setIsEditProfilePopupOpen}\n          onAddPlace={setIsAddPlacePopupOpen}\n          onEditAvatar={setIsEditAvatarPopupOpen}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={onClose}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={onClose}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={onClose}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <PopupWithForm\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          isOpen={isDeletePopupOpen}\n          onClose={onClose}\n        />\n        <ImagePopup\n          isOpen={isImagePopupOpen}\n          card={selectedCard}\n          onClose={onClose}\n        />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}